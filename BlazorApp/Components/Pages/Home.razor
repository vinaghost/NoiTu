@page "/"

@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject ILocalStorageService LocalStorage
@inject RoomManager RoomManager
@inject NavigationManager NavigationManager

<PageTitle>Nối từ</PageTitle>

<MudPaper Class="align-center justify-center mud-width-full pa-8">
    <MudForm>
        <MudStack>
            <MudText Typo="Typo.h5">Vào game</MudText>
            <MudTextField @bind-Value="Username" Label="Tên hiển thị" Variant="Variant.Outlined" Required="true" RequiredError="Tên hiển thị không được để trống!" />
            <MudStack Row="true">
                <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="CreateRoom">Tạo phòng</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Surface" OnClick="JoinRoom">Vào phòng</MudButton>
            </MudStack>
        </MudStack>
    </MudForm>
</MudPaper>

@code {
    string Username = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadUsername();
        }

    }

    async Task LoadUsername()
    {
        var name = await LocalStorage.GetItemAsync<string>("Username");
        if (!string.IsNullOrEmpty(name))
        {
            Username = name;
            await InvokeAsync(StateHasChanged);
        }
    }

    async Task CreateRoom()
    {
        await LocalStorage.SetItemAsStringAsync("Username", Username);
        var room = RoomManager.CreateRoom();

        NavigationManager.NavigateTo($"/play/{room}");
    }

    async Task JoinRoom()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters<InputDialog> { 
            { x => x.Title, "Mã phòng" },
            { x => x.Callback, (roomCode) => {
                if (RoomManager.IsRoomExists(roomCode))
                {
                    NavigationManager.NavigateTo($"/play/{roomCode}");
	            }
	            else
	            {
		            Snackbar.Add($"{roomCode} không tồn tại", Severity.Error);
                }
            }},
        };

        await DialogService.ShowAsync<InputDialog>("Nhập mã phòng", parameters,options );
    }
}